1. Annotated data from lyrics_data.csv [http://mir.dei.uc.pt/downloads.html]
2. Download the lyrics of each annotated song by using [https://api.lyrics.ovh/v1/artist/title] api
3. Manually annotated sentences from [http://mir.dei.uc.pt/downloads.html]
4. Words annotated with valence/arousal [emotion_dictionary.txt]
5. Sentence Emotion Recognition Model - SERM
- use the already completed word set [Y] (TODO: Explain the process of collecting the words)
- create a new word set using:
    - DAL [http://compling.org/cgi-bin/DAL_sentence_xml.cgi?sentence=love] (valence, activation)
    - ANEW [Ratings_Warriner_et_al.csv] -> (V.Mean.Sum, A.Mean.Sum) -> normalize to fit [1, 3] range as DAL values

We will use the ANEW values: VALENCE, AROUSAL.
The lyrisc_data.csv (the data set is represented in the ANEW value).
The emotion dictionary is represented with the DAL scale - PLEASANTNESS, ACTIVATION - CONVERT TO ANEW SCALE [Y]
    - Using the data_preprocessing/dal_to_anew.py script
    - Output: emotion_dictionary_anew.csv

========================================================================================================================
KEYWORDS-BASED APPROACH

1. Simple naive average valence/arousal classifier
    --Get all words from each song (only remove punctuation)
    --Get the valence/arousal of each word using the values from the emotion_dictionary_anew.csv
    --For each song calculate the average valence/arousal
    --Classify the song according to the avg. valence/arousal
    --Results:
        Matches: 91
        Total: 177
        Accuracy: 51.412%
        todo: maybe confusion matrix?

2. Simple naive dominant emotion word classifier
    --Get all words from each song (only remove punctuation)
    --Get the valence/arousal of each word using the values from the emotion_dictionary_anew.csv
    --For each find the most dominant emotion word (the furthest from (0, 0))
    --Classify the song according to the most dominant emotion word
    --Results:
        Matches: 66
        Total: 177
        Accuracy:	37.288%

3. Simple naive dominant emotion word per verse (todo possibly ignore, just random testing)
    --Get all verses from each song (remove blank lines)
    --Get the most dominant emotion word from each verse
    --Classify the song according to the most common emotion per verse
    --Results:
        Matches: 89
        Total: 177
        Accuracy:	50.282%


HOW TO PROCEED:
READ THE PAPER ABOUT KEYWORDS-BASED APPROACHES AND TRY SOME OF THEM.
========================================================================================================================

4. CREATING THE FULL DATA SET
Files:
    - Raw lyrics files (lyrics_data_csv)
    - Manually annotated sentences (Dataset-129_Sentences.txt)
    - Manually annotated sentences (Dataset-239_Sentences.txt)
Method:
    - Calculate the labels for the raw lyrics by their valence/arousal
    - Create separate file containing each sentence from the manually annotated sentences
    - Create unique ids for these files (so they can identified similar to the 'Code' from the raw lyrics data set)
    - Create new labels.csv file from the Dataset-129_Sentences-Classes.txt and Dataset-239_Sentences-Classes.txt with
    all labels identified by the unique id

    For each data file: (lyrics or sentence):
        - get all words
        - remove tailing 's: "mother's" -> "mother"
        - correct shortened gerunds: "playin'" -> "playing"
        - remove all non-VANA words (keep only verbs, adjectives, nouns and adverbs)
        - todo find SVANA words
        - todo extract features as defined int paper
